// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: game.proto

package game_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 单位移动状态
type MovementState int32

const (
	MovementState_Idle      MovementState = 0
	MovementState_StartMove MovementState = 1
	MovementState_Moving    MovementState = 2
	MovementState_ToStop    MovementState = 3
)

var MovementState_name = map[int32]string{
	0: "Idle",
	1: "StartMove",
	2: "Moving",
	3: "ToStop",
}

var MovementState_value = map[string]int32{
	"Idle":      0,
	"StartMove": 1,
	"Moving":    2,
	"ToStop":    3,
}

func (x MovementState) String() string {
	return proto.EnumName(MovementState_name, int32(x))
}

func (MovementState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{0}
}

type MsgAccountLoginGameReq_ProtoId int32

const (
	MsgAccountLoginGameReq_None MsgAccountLoginGameReq_ProtoId = 0
	MsgAccountLoginGameReq_Id   MsgAccountLoginGameReq_ProtoId = 1
)

var MsgAccountLoginGameReq_ProtoId_name = map[int32]string{
	0: "None",
	1: "Id",
}

var MsgAccountLoginGameReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   1,
}

func (x MsgAccountLoginGameReq_ProtoId) String() string {
	return proto.EnumName(MsgAccountLoginGameReq_ProtoId_name, int32(x))
}

func (MsgAccountLoginGameReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{0, 0}
}

type MsgAccountLoginGameAck_ProtoId int32

const (
	MsgAccountLoginGameAck_None MsgAccountLoginGameAck_ProtoId = 0
	MsgAccountLoginGameAck_Id   MsgAccountLoginGameAck_ProtoId = 2
)

var MsgAccountLoginGameAck_ProtoId_name = map[int32]string{
	0: "None",
	2: "Id",
}

var MsgAccountLoginGameAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   2,
}

func (x MsgAccountLoginGameAck_ProtoId) String() string {
	return proto.EnumName(MsgAccountLoginGameAck_ProtoId_name, int32(x))
}

func (MsgAccountLoginGameAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{1, 0}
}

type MsgTimeSyncReq_ProtoId int32

const (
	MsgTimeSyncReq_None MsgTimeSyncReq_ProtoId = 0
	MsgTimeSyncReq_Id   MsgTimeSyncReq_ProtoId = 10
)

var MsgTimeSyncReq_ProtoId_name = map[int32]string{
	0:  "None",
	10: "Id",
}

var MsgTimeSyncReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   10,
}

func (x MsgTimeSyncReq_ProtoId) String() string {
	return proto.EnumName(MsgTimeSyncReq_ProtoId_name, int32(x))
}

func (MsgTimeSyncReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{2, 0}
}

type MsgTimeSyncAck_ProtoId int32

const (
	MsgTimeSyncAck_None MsgTimeSyncAck_ProtoId = 0
	MsgTimeSyncAck_Id   MsgTimeSyncAck_ProtoId = 11
)

var MsgTimeSyncAck_ProtoId_name = map[int32]string{
	0:  "None",
	11: "Id",
}

var MsgTimeSyncAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   11,
}

func (x MsgTimeSyncAck_ProtoId) String() string {
	return proto.EnumName(MsgTimeSyncAck_ProtoId_name, int32(x))
}

func (MsgTimeSyncAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{3, 0}
}

type MsgPlayerEnterGameReq_ProtoId int32

const (
	MsgPlayerEnterGameReq_None MsgPlayerEnterGameReq_ProtoId = 0
	MsgPlayerEnterGameReq_Id   MsgPlayerEnterGameReq_ProtoId = 100
)

var MsgPlayerEnterGameReq_ProtoId_name = map[int32]string{
	0:   "None",
	100: "Id",
}

var MsgPlayerEnterGameReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   100,
}

func (x MsgPlayerEnterGameReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerEnterGameReq_ProtoId_name, int32(x))
}

func (MsgPlayerEnterGameReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{4, 0}
}

type MsgPlayerEnterGameAck_ProtoId int32

const (
	MsgPlayerEnterGameAck_None MsgPlayerEnterGameAck_ProtoId = 0
	MsgPlayerEnterGameAck_Id   MsgPlayerEnterGameAck_ProtoId = 101
)

var MsgPlayerEnterGameAck_ProtoId_name = map[int32]string{
	0:   "None",
	101: "Id",
}

var MsgPlayerEnterGameAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   101,
}

func (x MsgPlayerEnterGameAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerEnterGameAck_ProtoId_name, int32(x))
}

func (MsgPlayerEnterGameAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{5, 0}
}

type MsgPlayerEnterGameFinishNtf_ProtoId int32

const (
	MsgPlayerEnterGameFinishNtf_None MsgPlayerEnterGameFinishNtf_ProtoId = 0
	MsgPlayerEnterGameFinishNtf_Id   MsgPlayerEnterGameFinishNtf_ProtoId = 102
)

var MsgPlayerEnterGameFinishNtf_ProtoId_name = map[int32]string{
	0:   "None",
	102: "Id",
}

var MsgPlayerEnterGameFinishNtf_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   102,
}

func (x MsgPlayerEnterGameFinishNtf_ProtoId) String() string {
	return proto.EnumName(MsgPlayerEnterGameFinishNtf_ProtoId_name, int32(x))
}

func (MsgPlayerEnterGameFinishNtf_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{6, 0}
}

type MsgPlayerEnterGameSync_ProtoId int32

const (
	MsgPlayerEnterGameSync_None MsgPlayerEnterGameSync_ProtoId = 0
	MsgPlayerEnterGameSync_Id   MsgPlayerEnterGameSync_ProtoId = 103
)

var MsgPlayerEnterGameSync_ProtoId_name = map[int32]string{
	0:   "None",
	103: "Id",
}

var MsgPlayerEnterGameSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   103,
}

func (x MsgPlayerEnterGameSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerEnterGameSync_ProtoId_name, int32(x))
}

func (MsgPlayerEnterGameSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{7, 0}
}

type MsgPlayerExitGameReq_ProtoId int32

const (
	MsgPlayerExitGameReq_None MsgPlayerExitGameReq_ProtoId = 0
	MsgPlayerExitGameReq_Id   MsgPlayerExitGameReq_ProtoId = 110
)

var MsgPlayerExitGameReq_ProtoId_name = map[int32]string{
	0:   "None",
	110: "Id",
}

var MsgPlayerExitGameReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   110,
}

func (x MsgPlayerExitGameReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerExitGameReq_ProtoId_name, int32(x))
}

func (MsgPlayerExitGameReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{8, 0}
}

type MsgPlayerExitGameAck_ProtoId int32

const (
	MsgPlayerExitGameAck_None MsgPlayerExitGameAck_ProtoId = 0
	MsgPlayerExitGameAck_Id   MsgPlayerExitGameAck_ProtoId = 111
)

var MsgPlayerExitGameAck_ProtoId_name = map[int32]string{
	0:   "None",
	111: "Id",
}

var MsgPlayerExitGameAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   111,
}

func (x MsgPlayerExitGameAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerExitGameAck_ProtoId_name, int32(x))
}

func (MsgPlayerExitGameAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{9, 0}
}

type MsgPlayerExitGameSync_ProtoId int32

const (
	MsgPlayerExitGameSync_None MsgPlayerExitGameSync_ProtoId = 0
	MsgPlayerExitGameSync_Id   MsgPlayerExitGameSync_ProtoId = 112
)

var MsgPlayerExitGameSync_ProtoId_name = map[int32]string{
	0:   "None",
	112: "Id",
}

var MsgPlayerExitGameSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   112,
}

func (x MsgPlayerExitGameSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerExitGameSync_ProtoId_name, int32(x))
}

func (MsgPlayerExitGameSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{10, 0}
}

type MsgPlayerBasicInfoReq_ProtoId int32

const (
	MsgPlayerBasicInfoReq_None MsgPlayerBasicInfoReq_ProtoId = 0
	MsgPlayerBasicInfoReq_Id   MsgPlayerBasicInfoReq_ProtoId = 120
)

var MsgPlayerBasicInfoReq_ProtoId_name = map[int32]string{
	0:   "None",
	120: "Id",
}

var MsgPlayerBasicInfoReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   120,
}

func (x MsgPlayerBasicInfoReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerBasicInfoReq_ProtoId_name, int32(x))
}

func (MsgPlayerBasicInfoReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{11, 0}
}

type MsgPlayerBasicInfoAck_ProtoId int32

const (
	MsgPlayerBasicInfoAck_None MsgPlayerBasicInfoAck_ProtoId = 0
	MsgPlayerBasicInfoAck_Id   MsgPlayerBasicInfoAck_ProtoId = 121
)

var MsgPlayerBasicInfoAck_ProtoId_name = map[int32]string{
	0:   "None",
	121: "Id",
}

var MsgPlayerBasicInfoAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   121,
}

func (x MsgPlayerBasicInfoAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerBasicInfoAck_ProtoId_name, int32(x))
}

func (MsgPlayerBasicInfoAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{12, 0}
}

type MsgPlayerTankMoveReq_ProtoId int32

const (
	MsgPlayerTankMoveReq_None MsgPlayerTankMoveReq_ProtoId = 0
	MsgPlayerTankMoveReq_Id   MsgPlayerTankMoveReq_ProtoId = 200
)

var MsgPlayerTankMoveReq_ProtoId_name = map[int32]string{
	0:   "None",
	200: "Id",
}

var MsgPlayerTankMoveReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   200,
}

func (x MsgPlayerTankMoveReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankMoveReq_ProtoId_name, int32(x))
}

func (MsgPlayerTankMoveReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{13, 0}
}

type MsgPlayerTankMoveAck_ProtoId int32

const (
	MsgPlayerTankMoveAck_None MsgPlayerTankMoveAck_ProtoId = 0
	MsgPlayerTankMoveAck_Id   MsgPlayerTankMoveAck_ProtoId = 201
)

var MsgPlayerTankMoveAck_ProtoId_name = map[int32]string{
	0:   "None",
	201: "Id",
}

var MsgPlayerTankMoveAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   201,
}

func (x MsgPlayerTankMoveAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankMoveAck_ProtoId_name, int32(x))
}

func (MsgPlayerTankMoveAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{14, 0}
}

type MsgPlayerTankMoveSync_ProtoId int32

const (
	MsgPlayerTankMoveSync_None MsgPlayerTankMoveSync_ProtoId = 0
	MsgPlayerTankMoveSync_Id   MsgPlayerTankMoveSync_ProtoId = 202
)

var MsgPlayerTankMoveSync_ProtoId_name = map[int32]string{
	0:   "None",
	202: "Id",
}

var MsgPlayerTankMoveSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   202,
}

func (x MsgPlayerTankMoveSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankMoveSync_ProtoId_name, int32(x))
}

func (MsgPlayerTankMoveSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{15, 0}
}

type MsgPlayerTankUpdatePosReq_ProtoId int32

const (
	MsgPlayerTankUpdatePosReq_None MsgPlayerTankUpdatePosReq_ProtoId = 0
	MsgPlayerTankUpdatePosReq_Id   MsgPlayerTankUpdatePosReq_ProtoId = 203
)

var MsgPlayerTankUpdatePosReq_ProtoId_name = map[int32]string{
	0:   "None",
	203: "Id",
}

var MsgPlayerTankUpdatePosReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   203,
}

func (x MsgPlayerTankUpdatePosReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankUpdatePosReq_ProtoId_name, int32(x))
}

func (MsgPlayerTankUpdatePosReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{16, 0}
}

type MsgPlayerTankUpdatePosAck_ProtoId int32

const (
	MsgPlayerTankUpdatePosAck_None MsgPlayerTankUpdatePosAck_ProtoId = 0
	MsgPlayerTankUpdatePosAck_Id   MsgPlayerTankUpdatePosAck_ProtoId = 204
)

var MsgPlayerTankUpdatePosAck_ProtoId_name = map[int32]string{
	0:   "None",
	204: "Id",
}

var MsgPlayerTankUpdatePosAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   204,
}

func (x MsgPlayerTankUpdatePosAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankUpdatePosAck_ProtoId_name, int32(x))
}

func (MsgPlayerTankUpdatePosAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{17, 0}
}

type MsgPlayerTankUpdatePosSync_ProtoId int32

const (
	MsgPlayerTankUpdatePosSync_None MsgPlayerTankUpdatePosSync_ProtoId = 0
	MsgPlayerTankUpdatePosSync_Id   MsgPlayerTankUpdatePosSync_ProtoId = 205
)

var MsgPlayerTankUpdatePosSync_ProtoId_name = map[int32]string{
	0:   "None",
	205: "Id",
}

var MsgPlayerTankUpdatePosSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   205,
}

func (x MsgPlayerTankUpdatePosSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankUpdatePosSync_ProtoId_name, int32(x))
}

func (MsgPlayerTankUpdatePosSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{18, 0}
}

type MsgPlayerTankStopMoveReq_ProtoId int32

const (
	MsgPlayerTankStopMoveReq_None MsgPlayerTankStopMoveReq_ProtoId = 0
	MsgPlayerTankStopMoveReq_Id   MsgPlayerTankStopMoveReq_ProtoId = 206
)

var MsgPlayerTankStopMoveReq_ProtoId_name = map[int32]string{
	0:   "None",
	206: "Id",
}

var MsgPlayerTankStopMoveReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   206,
}

func (x MsgPlayerTankStopMoveReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankStopMoveReq_ProtoId_name, int32(x))
}

func (MsgPlayerTankStopMoveReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{19, 0}
}

type MsgPlayerTankStopMoveAck_ProtoId int32

const (
	MsgPlayerTankStopMoveAck_None MsgPlayerTankStopMoveAck_ProtoId = 0
	MsgPlayerTankStopMoveAck_Id   MsgPlayerTankStopMoveAck_ProtoId = 207
)

var MsgPlayerTankStopMoveAck_ProtoId_name = map[int32]string{
	0:   "None",
	207: "Id",
}

var MsgPlayerTankStopMoveAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   207,
}

func (x MsgPlayerTankStopMoveAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankStopMoveAck_ProtoId_name, int32(x))
}

func (MsgPlayerTankStopMoveAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{20, 0}
}

type MsgPlayerTankStopMoveSync_ProtoId int32

const (
	MsgPlayerTankStopMoveSync_None MsgPlayerTankStopMoveSync_ProtoId = 0
	MsgPlayerTankStopMoveSync_Id   MsgPlayerTankStopMoveSync_ProtoId = 208
)

var MsgPlayerTankStopMoveSync_ProtoId_name = map[int32]string{
	0:   "None",
	208: "Id",
}

var MsgPlayerTankStopMoveSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   208,
}

func (x MsgPlayerTankStopMoveSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerTankStopMoveSync_ProtoId_name, int32(x))
}

func (MsgPlayerTankStopMoveSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{21, 0}
}

type MsgPlayerChangeTankReq_ProtoId int32

const (
	MsgPlayerChangeTankReq_None MsgPlayerChangeTankReq_ProtoId = 0
	MsgPlayerChangeTankReq_Id   MsgPlayerChangeTankReq_ProtoId = 210
)

var MsgPlayerChangeTankReq_ProtoId_name = map[int32]string{
	0:   "None",
	210: "Id",
}

var MsgPlayerChangeTankReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   210,
}

func (x MsgPlayerChangeTankReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerChangeTankReq_ProtoId_name, int32(x))
}

func (MsgPlayerChangeTankReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{22, 0}
}

type MsgPlayerChangeTankAck_ProtoId int32

const (
	MsgPlayerChangeTankAck_None MsgPlayerChangeTankAck_ProtoId = 0
	MsgPlayerChangeTankAck_Id   MsgPlayerChangeTankAck_ProtoId = 211
)

var MsgPlayerChangeTankAck_ProtoId_name = map[int32]string{
	0:   "None",
	211: "Id",
}

var MsgPlayerChangeTankAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   211,
}

func (x MsgPlayerChangeTankAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerChangeTankAck_ProtoId_name, int32(x))
}

func (MsgPlayerChangeTankAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{23, 0}
}

type MsgPlayerChangeTankSync_ProtoId int32

const (
	MsgPlayerChangeTankSync_None MsgPlayerChangeTankSync_ProtoId = 0
	MsgPlayerChangeTankSync_Id   MsgPlayerChangeTankSync_ProtoId = 212
)

var MsgPlayerChangeTankSync_ProtoId_name = map[int32]string{
	0:   "None",
	212: "Id",
}

var MsgPlayerChangeTankSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   212,
}

func (x MsgPlayerChangeTankSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerChangeTankSync_ProtoId_name, int32(x))
}

func (MsgPlayerChangeTankSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{24, 0}
}

type MsgPlayerRestoreTankReq_ProtoId int32

const (
	MsgPlayerRestoreTankReq_None MsgPlayerRestoreTankReq_ProtoId = 0
	MsgPlayerRestoreTankReq_Id   MsgPlayerRestoreTankReq_ProtoId = 213
)

var MsgPlayerRestoreTankReq_ProtoId_name = map[int32]string{
	0:   "None",
	213: "Id",
}

var MsgPlayerRestoreTankReq_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   213,
}

func (x MsgPlayerRestoreTankReq_ProtoId) String() string {
	return proto.EnumName(MsgPlayerRestoreTankReq_ProtoId_name, int32(x))
}

func (MsgPlayerRestoreTankReq_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{25, 0}
}

type MsgPlayerRestoreTankAck_ProtoId int32

const (
	MsgPlayerRestoreTankAck_None MsgPlayerRestoreTankAck_ProtoId = 0
	MsgPlayerRestoreTankAck_Id   MsgPlayerRestoreTankAck_ProtoId = 214
)

var MsgPlayerRestoreTankAck_ProtoId_name = map[int32]string{
	0:   "None",
	214: "Id",
}

var MsgPlayerRestoreTankAck_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   214,
}

func (x MsgPlayerRestoreTankAck_ProtoId) String() string {
	return proto.EnumName(MsgPlayerRestoreTankAck_ProtoId_name, int32(x))
}

func (MsgPlayerRestoreTankAck_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{26, 0}
}

type MsgPlayerRestoreTankSync_ProtoId int32

const (
	MsgPlayerRestoreTankSync_None MsgPlayerRestoreTankSync_ProtoId = 0
	MsgPlayerRestoreTankSync_Id   MsgPlayerRestoreTankSync_ProtoId = 215
)

var MsgPlayerRestoreTankSync_ProtoId_name = map[int32]string{
	0:   "None",
	215: "Id",
}

var MsgPlayerRestoreTankSync_ProtoId_value = map[string]int32{
	"None": 0,
	"Id":   215,
}

func (x MsgPlayerRestoreTankSync_ProtoId) String() string {
	return proto.EnumName(MsgPlayerRestoreTankSync_ProtoId_name, int32(x))
}

func (MsgPlayerRestoreTankSync_ProtoId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{27, 0}
}

// 登录
type MsgAccountLoginGameReq struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	AccessToken          string   `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgAccountLoginGameReq) Reset()         { *m = MsgAccountLoginGameReq{} }
func (m *MsgAccountLoginGameReq) String() string { return proto.CompactTextString(m) }
func (*MsgAccountLoginGameReq) ProtoMessage()    {}
func (*MsgAccountLoginGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{0}
}
func (m *MsgAccountLoginGameReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAccountLoginGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAccountLoginGameReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAccountLoginGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAccountLoginGameReq.Merge(m, src)
}
func (m *MsgAccountLoginGameReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgAccountLoginGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAccountLoginGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAccountLoginGameReq proto.InternalMessageInfo

func (m *MsgAccountLoginGameReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgAccountLoginGameReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *MsgAccountLoginGameReq) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

// 登录返回
type MsgAccountLoginGameAck struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	SessionToken         string   `protobuf:"bytes,2,opt,name=SessionToken,proto3" json:"SessionToken,omitempty"`
	Result               uint32   `protobuf:"varint,3,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgAccountLoginGameAck) Reset()         { *m = MsgAccountLoginGameAck{} }
func (m *MsgAccountLoginGameAck) String() string { return proto.CompactTextString(m) }
func (*MsgAccountLoginGameAck) ProtoMessage()    {}
func (*MsgAccountLoginGameAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{1}
}
func (m *MsgAccountLoginGameAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAccountLoginGameAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAccountLoginGameAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAccountLoginGameAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAccountLoginGameAck.Merge(m, src)
}
func (m *MsgAccountLoginGameAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgAccountLoginGameAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAccountLoginGameAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAccountLoginGameAck proto.InternalMessageInfo

func (m *MsgAccountLoginGameAck) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgAccountLoginGameAck) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *MsgAccountLoginGameAck) GetResult() uint32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// 时间同步请求
type MsgTimeSyncReq struct {
	ClientTime           []byte   `protobuf:"bytes,1,opt,name=ClientTime,proto3" json:"ClientTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgTimeSyncReq) Reset()         { *m = MsgTimeSyncReq{} }
func (m *MsgTimeSyncReq) String() string { return proto.CompactTextString(m) }
func (*MsgTimeSyncReq) ProtoMessage()    {}
func (*MsgTimeSyncReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{2}
}
func (m *MsgTimeSyncReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTimeSyncReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTimeSyncReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTimeSyncReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTimeSyncReq.Merge(m, src)
}
func (m *MsgTimeSyncReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgTimeSyncReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTimeSyncReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTimeSyncReq proto.InternalMessageInfo

func (m *MsgTimeSyncReq) GetClientTime() []byte {
	if m != nil {
		return m.ClientTime
	}
	return nil
}

// 时间同步返回
type MsgTimeSyncAck struct {
	ServerTime           []byte   `protobuf:"bytes,2,opt,name=ServerTime,proto3" json:"ServerTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgTimeSyncAck) Reset()         { *m = MsgTimeSyncAck{} }
func (m *MsgTimeSyncAck) String() string { return proto.CompactTextString(m) }
func (*MsgTimeSyncAck) ProtoMessage()    {}
func (*MsgTimeSyncAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{3}
}
func (m *MsgTimeSyncAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTimeSyncAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTimeSyncAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTimeSyncAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTimeSyncAck.Merge(m, src)
}
func (m *MsgTimeSyncAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgTimeSyncAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTimeSyncAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTimeSyncAck proto.InternalMessageInfo

func (m *MsgTimeSyncAck) GetServerTime() []byte {
	if m != nil {
		return m.ServerTime
	}
	return nil
}

// 进入游戏请求
type MsgPlayerEnterGameReq struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	SessionToken         string   `protobuf:"bytes,2,opt,name=SessionToken,proto3" json:"SessionToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerEnterGameReq) Reset()         { *m = MsgPlayerEnterGameReq{} }
func (m *MsgPlayerEnterGameReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerEnterGameReq) ProtoMessage()    {}
func (*MsgPlayerEnterGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{4}
}
func (m *MsgPlayerEnterGameReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerEnterGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerEnterGameReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerEnterGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerEnterGameReq.Merge(m, src)
}
func (m *MsgPlayerEnterGameReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerEnterGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerEnterGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerEnterGameReq proto.InternalMessageInfo

func (m *MsgPlayerEnterGameReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgPlayerEnterGameReq) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

// 进入游戏返回
type MsgPlayerEnterGameAck struct {
	SelfTankInfo            *PlayerAccountTankInfo   `protobuf:"bytes,1,opt,name=SelfTankInfo,proto3" json:"SelfTankInfo,omitempty"`
	OtherPlayerTankInfoList []*PlayerAccountTankInfo `protobuf:"bytes,2,rep,name=OtherPlayerTankInfoList,proto3" json:"OtherPlayerTankInfoList,omitempty"`
	MapId                   int32                    `protobuf:"varint,3,opt,name=MapId,proto3" json:"MapId,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *MsgPlayerEnterGameAck) Reset()         { *m = MsgPlayerEnterGameAck{} }
func (m *MsgPlayerEnterGameAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerEnterGameAck) ProtoMessage()    {}
func (*MsgPlayerEnterGameAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{5}
}
func (m *MsgPlayerEnterGameAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerEnterGameAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerEnterGameAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerEnterGameAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerEnterGameAck.Merge(m, src)
}
func (m *MsgPlayerEnterGameAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerEnterGameAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerEnterGameAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerEnterGameAck proto.InternalMessageInfo

func (m *MsgPlayerEnterGameAck) GetSelfTankInfo() *PlayerAccountTankInfo {
	if m != nil {
		return m.SelfTankInfo
	}
	return nil
}

func (m *MsgPlayerEnterGameAck) GetOtherPlayerTankInfoList() []*PlayerAccountTankInfo {
	if m != nil {
		return m.OtherPlayerTankInfoList
	}
	return nil
}

func (m *MsgPlayerEnterGameAck) GetMapId() int32 {
	if m != nil {
		return m.MapId
	}
	return 0
}

// 进入游戏结束通知
type MsgPlayerEnterGameFinishNtf struct {
	ServerTime           []byte   `protobuf:"bytes,1,opt,name=ServerTime,proto3" json:"ServerTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerEnterGameFinishNtf) Reset()         { *m = MsgPlayerEnterGameFinishNtf{} }
func (m *MsgPlayerEnterGameFinishNtf) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerEnterGameFinishNtf) ProtoMessage()    {}
func (*MsgPlayerEnterGameFinishNtf) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{6}
}
func (m *MsgPlayerEnterGameFinishNtf) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerEnterGameFinishNtf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerEnterGameFinishNtf.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerEnterGameFinishNtf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerEnterGameFinishNtf.Merge(m, src)
}
func (m *MsgPlayerEnterGameFinishNtf) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerEnterGameFinishNtf) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerEnterGameFinishNtf.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerEnterGameFinishNtf proto.InternalMessageInfo

func (m *MsgPlayerEnterGameFinishNtf) GetServerTime() []byte {
	if m != nil {
		return m.ServerTime
	}
	return nil
}

// 玩家进入游戏同步
type MsgPlayerEnterGameSync struct {
	TankInfo             *PlayerAccountTankInfo `protobuf:"bytes,1,opt,name=TankInfo,proto3" json:"TankInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MsgPlayerEnterGameSync) Reset()         { *m = MsgPlayerEnterGameSync{} }
func (m *MsgPlayerEnterGameSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerEnterGameSync) ProtoMessage()    {}
func (*MsgPlayerEnterGameSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{7}
}
func (m *MsgPlayerEnterGameSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerEnterGameSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerEnterGameSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerEnterGameSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerEnterGameSync.Merge(m, src)
}
func (m *MsgPlayerEnterGameSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerEnterGameSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerEnterGameSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerEnterGameSync proto.InternalMessageInfo

func (m *MsgPlayerEnterGameSync) GetTankInfo() *PlayerAccountTankInfo {
	if m != nil {
		return m.TankInfo
	}
	return nil
}

// 退出游戏请求
type MsgPlayerExitGameReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerExitGameReq) Reset()         { *m = MsgPlayerExitGameReq{} }
func (m *MsgPlayerExitGameReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerExitGameReq) ProtoMessage()    {}
func (*MsgPlayerExitGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{8}
}
func (m *MsgPlayerExitGameReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerExitGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerExitGameReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerExitGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerExitGameReq.Merge(m, src)
}
func (m *MsgPlayerExitGameReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerExitGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerExitGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerExitGameReq proto.InternalMessageInfo

// 退出游戏返回
type MsgPlayerExitGameAck struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerExitGameAck) Reset()         { *m = MsgPlayerExitGameAck{} }
func (m *MsgPlayerExitGameAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerExitGameAck) ProtoMessage()    {}
func (*MsgPlayerExitGameAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{9}
}
func (m *MsgPlayerExitGameAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerExitGameAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerExitGameAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerExitGameAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerExitGameAck.Merge(m, src)
}
func (m *MsgPlayerExitGameAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerExitGameAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerExitGameAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerExitGameAck proto.InternalMessageInfo

// 玩家退出游戏同步
type MsgPlayerExitGameSync struct {
	PlayerId             uint64   `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerExitGameSync) Reset()         { *m = MsgPlayerExitGameSync{} }
func (m *MsgPlayerExitGameSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerExitGameSync) ProtoMessage()    {}
func (*MsgPlayerExitGameSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{10}
}
func (m *MsgPlayerExitGameSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerExitGameSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerExitGameSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerExitGameSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerExitGameSync.Merge(m, src)
}
func (m *MsgPlayerExitGameSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerExitGameSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerExitGameSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerExitGameSync proto.InternalMessageInfo

func (m *MsgPlayerExitGameSync) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 玩家基本信息请求
type MsgPlayerBasicInfoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerBasicInfoReq) Reset()         { *m = MsgPlayerBasicInfoReq{} }
func (m *MsgPlayerBasicInfoReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerBasicInfoReq) ProtoMessage()    {}
func (*MsgPlayerBasicInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{11}
}
func (m *MsgPlayerBasicInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerBasicInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerBasicInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerBasicInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerBasicInfoReq.Merge(m, src)
}
func (m *MsgPlayerBasicInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerBasicInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerBasicInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerBasicInfoReq proto.InternalMessageInfo

// 玩家基本信息返回
type MsgPlayerBasicInfoAck struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerBasicInfoAck) Reset()         { *m = MsgPlayerBasicInfoAck{} }
func (m *MsgPlayerBasicInfoAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerBasicInfoAck) ProtoMessage()    {}
func (*MsgPlayerBasicInfoAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{12}
}
func (m *MsgPlayerBasicInfoAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerBasicInfoAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerBasicInfoAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerBasicInfoAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerBasicInfoAck.Merge(m, src)
}
func (m *MsgPlayerBasicInfoAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerBasicInfoAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerBasicInfoAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerBasicInfoAck proto.InternalMessageInfo

// 坦克移动请求
type MsgPlayerTankMoveReq struct {
	MoveInfo             *TankMoveInfo `protobuf:"bytes,1,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankMoveReq) Reset()         { *m = MsgPlayerTankMoveReq{} }
func (m *MsgPlayerTankMoveReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankMoveReq) ProtoMessage()    {}
func (*MsgPlayerTankMoveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{13}
}
func (m *MsgPlayerTankMoveReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankMoveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankMoveReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankMoveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankMoveReq.Merge(m, src)
}
func (m *MsgPlayerTankMoveReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankMoveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankMoveReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankMoveReq proto.InternalMessageInfo

func (m *MsgPlayerTankMoveReq) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克移动返回
type MsgPlayerTankMoveAck struct {
	MoveInfo             *TankMoveInfo `protobuf:"bytes,1,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankMoveAck) Reset()         { *m = MsgPlayerTankMoveAck{} }
func (m *MsgPlayerTankMoveAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankMoveAck) ProtoMessage()    {}
func (*MsgPlayerTankMoveAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{14}
}
func (m *MsgPlayerTankMoveAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankMoveAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankMoveAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankMoveAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankMoveAck.Merge(m, src)
}
func (m *MsgPlayerTankMoveAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankMoveAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankMoveAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankMoveAck proto.InternalMessageInfo

func (m *MsgPlayerTankMoveAck) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克移动同步
type MsgPlayerTankMoveSync struct {
	PlayerId             uint64        `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	MoveInfo             *TankMoveInfo `protobuf:"bytes,2,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankMoveSync) Reset()         { *m = MsgPlayerTankMoveSync{} }
func (m *MsgPlayerTankMoveSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankMoveSync) ProtoMessage()    {}
func (*MsgPlayerTankMoveSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{15}
}
func (m *MsgPlayerTankMoveSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankMoveSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankMoveSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankMoveSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankMoveSync.Merge(m, src)
}
func (m *MsgPlayerTankMoveSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankMoveSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankMoveSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankMoveSync proto.InternalMessageInfo

func (m *MsgPlayerTankMoveSync) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MsgPlayerTankMoveSync) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克位置更新请求
type MsgPlayerTankUpdatePosReq struct {
	State                MovementState `protobuf:"varint,1,opt,name=State,proto3,enum=game_proto.MovementState" json:"State,omitempty"`
	MoveInfo             *TankMoveInfo `protobuf:"bytes,2,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankUpdatePosReq) Reset()         { *m = MsgPlayerTankUpdatePosReq{} }
func (m *MsgPlayerTankUpdatePosReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankUpdatePosReq) ProtoMessage()    {}
func (*MsgPlayerTankUpdatePosReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{16}
}
func (m *MsgPlayerTankUpdatePosReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankUpdatePosReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankUpdatePosReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankUpdatePosReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankUpdatePosReq.Merge(m, src)
}
func (m *MsgPlayerTankUpdatePosReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankUpdatePosReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankUpdatePosReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankUpdatePosReq proto.InternalMessageInfo

func (m *MsgPlayerTankUpdatePosReq) GetState() MovementState {
	if m != nil {
		return m.State
	}
	return MovementState_Idle
}

func (m *MsgPlayerTankUpdatePosReq) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克位置更新返回
type MsgPlayerTankUpdatePosAck struct {
	State                MovementState `protobuf:"varint,1,opt,name=State,proto3,enum=game_proto.MovementState" json:"State,omitempty"`
	MoveInfo             *TankMoveInfo `protobuf:"bytes,2,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankUpdatePosAck) Reset()         { *m = MsgPlayerTankUpdatePosAck{} }
func (m *MsgPlayerTankUpdatePosAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankUpdatePosAck) ProtoMessage()    {}
func (*MsgPlayerTankUpdatePosAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{17}
}
func (m *MsgPlayerTankUpdatePosAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankUpdatePosAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankUpdatePosAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankUpdatePosAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankUpdatePosAck.Merge(m, src)
}
func (m *MsgPlayerTankUpdatePosAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankUpdatePosAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankUpdatePosAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankUpdatePosAck proto.InternalMessageInfo

func (m *MsgPlayerTankUpdatePosAck) GetState() MovementState {
	if m != nil {
		return m.State
	}
	return MovementState_Idle
}

func (m *MsgPlayerTankUpdatePosAck) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克位置更新同步
type MsgPlayerTankUpdatePosSync struct {
	PlayerId             uint64        `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	State                MovementState `protobuf:"varint,2,opt,name=State,proto3,enum=game_proto.MovementState" json:"State,omitempty"`
	MoveInfo             *TankMoveInfo `protobuf:"bytes,3,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankUpdatePosSync) Reset()         { *m = MsgPlayerTankUpdatePosSync{} }
func (m *MsgPlayerTankUpdatePosSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankUpdatePosSync) ProtoMessage()    {}
func (*MsgPlayerTankUpdatePosSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{18}
}
func (m *MsgPlayerTankUpdatePosSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankUpdatePosSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankUpdatePosSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankUpdatePosSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankUpdatePosSync.Merge(m, src)
}
func (m *MsgPlayerTankUpdatePosSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankUpdatePosSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankUpdatePosSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankUpdatePosSync proto.InternalMessageInfo

func (m *MsgPlayerTankUpdatePosSync) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MsgPlayerTankUpdatePosSync) GetState() MovementState {
	if m != nil {
		return m.State
	}
	return MovementState_Idle
}

func (m *MsgPlayerTankUpdatePosSync) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克停止移动请求
type MsgPlayerTankStopMoveReq struct {
	MoveInfo             *TankMoveInfo `protobuf:"bytes,1,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankStopMoveReq) Reset()         { *m = MsgPlayerTankStopMoveReq{} }
func (m *MsgPlayerTankStopMoveReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankStopMoveReq) ProtoMessage()    {}
func (*MsgPlayerTankStopMoveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{19}
}
func (m *MsgPlayerTankStopMoveReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankStopMoveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankStopMoveReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankStopMoveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankStopMoveReq.Merge(m, src)
}
func (m *MsgPlayerTankStopMoveReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankStopMoveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankStopMoveReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankStopMoveReq proto.InternalMessageInfo

func (m *MsgPlayerTankStopMoveReq) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克停止移动返回
type MsgPlayerTankStopMoveAck struct {
	MoveInfo             *TankMoveInfo `protobuf:"bytes,1,opt,name=MoveInfo,proto3" json:"MoveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MsgPlayerTankStopMoveAck) Reset()         { *m = MsgPlayerTankStopMoveAck{} }
func (m *MsgPlayerTankStopMoveAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankStopMoveAck) ProtoMessage()    {}
func (*MsgPlayerTankStopMoveAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{20}
}
func (m *MsgPlayerTankStopMoveAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankStopMoveAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankStopMoveAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankStopMoveAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankStopMoveAck.Merge(m, src)
}
func (m *MsgPlayerTankStopMoveAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankStopMoveAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankStopMoveAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankStopMoveAck proto.InternalMessageInfo

func (m *MsgPlayerTankStopMoveAck) GetMoveInfo() *TankMoveInfo {
	if m != nil {
		return m.MoveInfo
	}
	return nil
}

// 坦克停止移动同步
type MsgPlayerTankStopMoveSync struct {
	PlayerId             uint64   `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerTankStopMoveSync) Reset()         { *m = MsgPlayerTankStopMoveSync{} }
func (m *MsgPlayerTankStopMoveSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerTankStopMoveSync) ProtoMessage()    {}
func (*MsgPlayerTankStopMoveSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{21}
}
func (m *MsgPlayerTankStopMoveSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerTankStopMoveSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerTankStopMoveSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerTankStopMoveSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerTankStopMoveSync.Merge(m, src)
}
func (m *MsgPlayerTankStopMoveSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerTankStopMoveSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerTankStopMoveSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerTankStopMoveSync proto.InternalMessageInfo

func (m *MsgPlayerTankStopMoveSync) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 改变坦克请求
type MsgPlayerChangeTankReq struct {
	TankId               int32    `protobuf:"varint,1,opt,name=TankId,proto3" json:"TankId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerChangeTankReq) Reset()         { *m = MsgPlayerChangeTankReq{} }
func (m *MsgPlayerChangeTankReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerChangeTankReq) ProtoMessage()    {}
func (*MsgPlayerChangeTankReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{22}
}
func (m *MsgPlayerChangeTankReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerChangeTankReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerChangeTankReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerChangeTankReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerChangeTankReq.Merge(m, src)
}
func (m *MsgPlayerChangeTankReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerChangeTankReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerChangeTankReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerChangeTankReq proto.InternalMessageInfo

func (m *MsgPlayerChangeTankReq) GetTankId() int32 {
	if m != nil {
		return m.TankId
	}
	return 0
}

// 改变坦克回复
type MsgPlayerChangeTankAck struct {
	ChangedTankInfo      *TankInfo `protobuf:"bytes,1,opt,name=ChangedTankInfo,proto3" json:"ChangedTankInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MsgPlayerChangeTankAck) Reset()         { *m = MsgPlayerChangeTankAck{} }
func (m *MsgPlayerChangeTankAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerChangeTankAck) ProtoMessage()    {}
func (*MsgPlayerChangeTankAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{23}
}
func (m *MsgPlayerChangeTankAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerChangeTankAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerChangeTankAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerChangeTankAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerChangeTankAck.Merge(m, src)
}
func (m *MsgPlayerChangeTankAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerChangeTankAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerChangeTankAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerChangeTankAck proto.InternalMessageInfo

func (m *MsgPlayerChangeTankAck) GetChangedTankInfo() *TankInfo {
	if m != nil {
		return m.ChangedTankInfo
	}
	return nil
}

// 改变坦克同步
type MsgPlayerChangeTankSync struct {
	ChangedTankInfo      *PlayerTankInfo `protobuf:"bytes,1,opt,name=ChangedTankInfo,proto3" json:"ChangedTankInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MsgPlayerChangeTankSync) Reset()         { *m = MsgPlayerChangeTankSync{} }
func (m *MsgPlayerChangeTankSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerChangeTankSync) ProtoMessage()    {}
func (*MsgPlayerChangeTankSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{24}
}
func (m *MsgPlayerChangeTankSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerChangeTankSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerChangeTankSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerChangeTankSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerChangeTankSync.Merge(m, src)
}
func (m *MsgPlayerChangeTankSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerChangeTankSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerChangeTankSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerChangeTankSync proto.InternalMessageInfo

func (m *MsgPlayerChangeTankSync) GetChangedTankInfo() *PlayerTankInfo {
	if m != nil {
		return m.ChangedTankInfo
	}
	return nil
}

// 恢复坦克请求
type MsgPlayerRestoreTankReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerRestoreTankReq) Reset()         { *m = MsgPlayerRestoreTankReq{} }
func (m *MsgPlayerRestoreTankReq) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerRestoreTankReq) ProtoMessage()    {}
func (*MsgPlayerRestoreTankReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{25}
}
func (m *MsgPlayerRestoreTankReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerRestoreTankReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerRestoreTankReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerRestoreTankReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerRestoreTankReq.Merge(m, src)
}
func (m *MsgPlayerRestoreTankReq) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerRestoreTankReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerRestoreTankReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerRestoreTankReq proto.InternalMessageInfo

// 恢复坦克回应
type MsgPlayerRestoreTankAck struct {
	TankId               int32    `protobuf:"varint,1,opt,name=TankId,proto3" json:"TankId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerRestoreTankAck) Reset()         { *m = MsgPlayerRestoreTankAck{} }
func (m *MsgPlayerRestoreTankAck) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerRestoreTankAck) ProtoMessage()    {}
func (*MsgPlayerRestoreTankAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{26}
}
func (m *MsgPlayerRestoreTankAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerRestoreTankAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerRestoreTankAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerRestoreTankAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerRestoreTankAck.Merge(m, src)
}
func (m *MsgPlayerRestoreTankAck) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerRestoreTankAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerRestoreTankAck.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerRestoreTankAck proto.InternalMessageInfo

func (m *MsgPlayerRestoreTankAck) GetTankId() int32 {
	if m != nil {
		return m.TankId
	}
	return 0
}

// 恢复坦克同步
type MsgPlayerRestoreTankSync struct {
	PlayerId             uint64   `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	TankId               int32    `protobuf:"varint,2,opt,name=TankId,proto3" json:"TankId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgPlayerRestoreTankSync) Reset()         { *m = MsgPlayerRestoreTankSync{} }
func (m *MsgPlayerRestoreTankSync) String() string { return proto.CompactTextString(m) }
func (*MsgPlayerRestoreTankSync) ProtoMessage()    {}
func (*MsgPlayerRestoreTankSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{27}
}
func (m *MsgPlayerRestoreTankSync) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPlayerRestoreTankSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPlayerRestoreTankSync.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPlayerRestoreTankSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPlayerRestoreTankSync.Merge(m, src)
}
func (m *MsgPlayerRestoreTankSync) XXX_Size() int {
	return m.Size()
}
func (m *MsgPlayerRestoreTankSync) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPlayerRestoreTankSync.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPlayerRestoreTankSync proto.InternalMessageInfo

func (m *MsgPlayerRestoreTankSync) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *MsgPlayerRestoreTankSync) GetTankId() int32 {
	if m != nil {
		return m.TankId
	}
	return 0
}

func init() {
	proto.RegisterEnum("game_proto.MovementState", MovementState_name, MovementState_value)
	proto.RegisterEnum("game_proto.MsgAccountLoginGameReq_ProtoId", MsgAccountLoginGameReq_ProtoId_name, MsgAccountLoginGameReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgAccountLoginGameAck_ProtoId", MsgAccountLoginGameAck_ProtoId_name, MsgAccountLoginGameAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgTimeSyncReq_ProtoId", MsgTimeSyncReq_ProtoId_name, MsgTimeSyncReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgTimeSyncAck_ProtoId", MsgTimeSyncAck_ProtoId_name, MsgTimeSyncAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerEnterGameReq_ProtoId", MsgPlayerEnterGameReq_ProtoId_name, MsgPlayerEnterGameReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerEnterGameAck_ProtoId", MsgPlayerEnterGameAck_ProtoId_name, MsgPlayerEnterGameAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerEnterGameFinishNtf_ProtoId", MsgPlayerEnterGameFinishNtf_ProtoId_name, MsgPlayerEnterGameFinishNtf_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerEnterGameSync_ProtoId", MsgPlayerEnterGameSync_ProtoId_name, MsgPlayerEnterGameSync_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerExitGameReq_ProtoId", MsgPlayerExitGameReq_ProtoId_name, MsgPlayerExitGameReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerExitGameAck_ProtoId", MsgPlayerExitGameAck_ProtoId_name, MsgPlayerExitGameAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerExitGameSync_ProtoId", MsgPlayerExitGameSync_ProtoId_name, MsgPlayerExitGameSync_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerBasicInfoReq_ProtoId", MsgPlayerBasicInfoReq_ProtoId_name, MsgPlayerBasicInfoReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerBasicInfoAck_ProtoId", MsgPlayerBasicInfoAck_ProtoId_name, MsgPlayerBasicInfoAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankMoveReq_ProtoId", MsgPlayerTankMoveReq_ProtoId_name, MsgPlayerTankMoveReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankMoveAck_ProtoId", MsgPlayerTankMoveAck_ProtoId_name, MsgPlayerTankMoveAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankMoveSync_ProtoId", MsgPlayerTankMoveSync_ProtoId_name, MsgPlayerTankMoveSync_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankUpdatePosReq_ProtoId", MsgPlayerTankUpdatePosReq_ProtoId_name, MsgPlayerTankUpdatePosReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankUpdatePosAck_ProtoId", MsgPlayerTankUpdatePosAck_ProtoId_name, MsgPlayerTankUpdatePosAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankUpdatePosSync_ProtoId", MsgPlayerTankUpdatePosSync_ProtoId_name, MsgPlayerTankUpdatePosSync_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankStopMoveReq_ProtoId", MsgPlayerTankStopMoveReq_ProtoId_name, MsgPlayerTankStopMoveReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankStopMoveAck_ProtoId", MsgPlayerTankStopMoveAck_ProtoId_name, MsgPlayerTankStopMoveAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerTankStopMoveSync_ProtoId", MsgPlayerTankStopMoveSync_ProtoId_name, MsgPlayerTankStopMoveSync_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerChangeTankReq_ProtoId", MsgPlayerChangeTankReq_ProtoId_name, MsgPlayerChangeTankReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerChangeTankAck_ProtoId", MsgPlayerChangeTankAck_ProtoId_name, MsgPlayerChangeTankAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerChangeTankSync_ProtoId", MsgPlayerChangeTankSync_ProtoId_name, MsgPlayerChangeTankSync_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerRestoreTankReq_ProtoId", MsgPlayerRestoreTankReq_ProtoId_name, MsgPlayerRestoreTankReq_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerRestoreTankAck_ProtoId", MsgPlayerRestoreTankAck_ProtoId_name, MsgPlayerRestoreTankAck_ProtoId_value)
	proto.RegisterEnum("game_proto.MsgPlayerRestoreTankSync_ProtoId", MsgPlayerRestoreTankSync_ProtoId_name, MsgPlayerRestoreTankSync_ProtoId_value)
	proto.RegisterType((*MsgAccountLoginGameReq)(nil), "game_proto.MsgAccountLoginGameReq")
	proto.RegisterType((*MsgAccountLoginGameAck)(nil), "game_proto.MsgAccountLoginGameAck")
	proto.RegisterType((*MsgTimeSyncReq)(nil), "game_proto.MsgTimeSyncReq")
	proto.RegisterType((*MsgTimeSyncAck)(nil), "game_proto.MsgTimeSyncAck")
	proto.RegisterType((*MsgPlayerEnterGameReq)(nil), "game_proto.MsgPlayerEnterGameReq")
	proto.RegisterType((*MsgPlayerEnterGameAck)(nil), "game_proto.MsgPlayerEnterGameAck")
	proto.RegisterType((*MsgPlayerEnterGameFinishNtf)(nil), "game_proto.MsgPlayerEnterGameFinishNtf")
	proto.RegisterType((*MsgPlayerEnterGameSync)(nil), "game_proto.MsgPlayerEnterGameSync")
	proto.RegisterType((*MsgPlayerExitGameReq)(nil), "game_proto.MsgPlayerExitGameReq")
	proto.RegisterType((*MsgPlayerExitGameAck)(nil), "game_proto.MsgPlayerExitGameAck")
	proto.RegisterType((*MsgPlayerExitGameSync)(nil), "game_proto.MsgPlayerExitGameSync")
	proto.RegisterType((*MsgPlayerBasicInfoReq)(nil), "game_proto.MsgPlayerBasicInfoReq")
	proto.RegisterType((*MsgPlayerBasicInfoAck)(nil), "game_proto.MsgPlayerBasicInfoAck")
	proto.RegisterType((*MsgPlayerTankMoveReq)(nil), "game_proto.MsgPlayerTankMoveReq")
	proto.RegisterType((*MsgPlayerTankMoveAck)(nil), "game_proto.MsgPlayerTankMoveAck")
	proto.RegisterType((*MsgPlayerTankMoveSync)(nil), "game_proto.MsgPlayerTankMoveSync")
	proto.RegisterType((*MsgPlayerTankUpdatePosReq)(nil), "game_proto.MsgPlayerTankUpdatePosReq")
	proto.RegisterType((*MsgPlayerTankUpdatePosAck)(nil), "game_proto.MsgPlayerTankUpdatePosAck")
	proto.RegisterType((*MsgPlayerTankUpdatePosSync)(nil), "game_proto.MsgPlayerTankUpdatePosSync")
	proto.RegisterType((*MsgPlayerTankStopMoveReq)(nil), "game_proto.MsgPlayerTankStopMoveReq")
	proto.RegisterType((*MsgPlayerTankStopMoveAck)(nil), "game_proto.MsgPlayerTankStopMoveAck")
	proto.RegisterType((*MsgPlayerTankStopMoveSync)(nil), "game_proto.MsgPlayerTankStopMoveSync")
	proto.RegisterType((*MsgPlayerChangeTankReq)(nil), "game_proto.MsgPlayerChangeTankReq")
	proto.RegisterType((*MsgPlayerChangeTankAck)(nil), "game_proto.MsgPlayerChangeTankAck")
	proto.RegisterType((*MsgPlayerChangeTankSync)(nil), "game_proto.MsgPlayerChangeTankSync")
	proto.RegisterType((*MsgPlayerRestoreTankReq)(nil), "game_proto.MsgPlayerRestoreTankReq")
	proto.RegisterType((*MsgPlayerRestoreTankAck)(nil), "game_proto.MsgPlayerRestoreTankAck")
	proto.RegisterType((*MsgPlayerRestoreTankSync)(nil), "game_proto.MsgPlayerRestoreTankSync")
}

func init() { proto.RegisterFile("game.proto", fileDescriptor_38fc58335341d769) }

var fileDescriptor_38fc58335341d769 = []byte{
	// 822 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xcd, 0x4f, 0xe3, 0x46,
	0x14, 0x67, 0x1c, 0x12, 0xc2, 0x83, 0xd0, 0xc8, 0xa2, 0x10, 0x42, 0x95, 0xd2, 0x39, 0x55, 0x3d,
	0x04, 0x09, 0x90, 0x7a, 0x6a, 0xd5, 0x40, 0x69, 0x15, 0x89, 0x40, 0xe4, 0x84, 0x0b, 0x3d, 0x54,
	0xae, 0x3d, 0x31, 0x6e, 0x92, 0x99, 0xd4, 0x1e, 0x52, 0x38, 0xf4, 0xdc, 0x43, 0xd5, 0x7b, 0x8f,
	0xfd, 0x47, 0xf6, 0xce, 0x7e, 0xa3, 0xfd, 0xbc, 0xae, 0xd8, 0xfb, 0xfe, 0x0d, 0xab, 0x19, 0xc7,
	0x89, 0x13, 0xcc, 0x04, 0x50, 0xd0, 0x9e, 0x32, 0xf3, 0xfc, 0xde, 0xef, 0xf7, 0x7b, 0x5f, 0x19,
	0x00, 0xc7, 0x6c, 0x93, 0x62, 0xc7, 0x63, 0x9c, 0xe9, 0xf2, 0xfc, 0xab, 0x3c, 0xe7, 0xe7, 0x2d,
	0xd6, 0x6e, 0x33, 0x1a, 0x7c, 0xc1, 0xff, 0x22, 0x58, 0xaa, 0xf8, 0x4e, 0xc9, 0xb2, 0xd8, 0x09,
	0xe5, 0x7b, 0xcc, 0x71, 0xe9, 0xcf, 0x66, 0x9b, 0x18, 0xe4, 0x0f, 0x3d, 0x07, 0x33, 0x3d, 0x73,
	0x0e, 0xad, 0xa1, 0xaf, 0x67, 0x8d, 0xf0, 0xaa, 0xe7, 0x21, 0x5d, 0x35, 0x7d, 0xff, 0x4f, 0xe6,
	0xd9, 0x39, 0x4d, 0x7e, 0xea, 0xdf, 0xf5, 0x35, 0x98, 0x2b, 0x59, 0x16, 0xf1, 0xfd, 0x3a, 0x6b,
	0x12, 0x9a, 0x4b, 0xc8, 0xcf, 0x51, 0x13, 0x5e, 0x85, 0x99, 0xaa, 0xe0, 0x2e, 0xdb, 0x7a, 0x1a,
	0xa6, 0xf7, 0x19, 0x25, 0xd9, 0x29, 0x3d, 0x05, 0x5a, 0xd9, 0xce, 0x22, 0xfc, 0x4f, 0xbc, 0x9e,
	0x92, 0xd5, 0x54, 0xe8, 0xc1, 0x30, 0x5f, 0x23, 0xbe, 0xef, 0x32, 0x1a, 0x90, 0x06, 0x9a, 0x86,
	0x6c, 0xfa, 0x12, 0xa4, 0x0c, 0xe2, 0x9f, 0xb4, 0xb8, 0x94, 0x94, 0x31, 0x7a, 0x37, 0x95, 0x1a,
	0x0d, 0x57, 0x60, 0xa1, 0xe2, 0x3b, 0x75, 0xb7, 0x4d, 0x6a, 0x67, 0xd4, 0x12, 0x45, 0x29, 0x00,
	0xec, 0xb4, 0x5c, 0x42, 0xb9, 0x30, 0x4a, 0x1d, 0xf3, 0x46, 0xc4, 0xa2, 0x82, 0x83, 0x11, 0x38,
	0x91, 0x53, 0x01, 0xa0, 0x46, 0xbc, 0x2e, 0xf1, 0x24, 0x9c, 0x16, 0xc0, 0x0d, 0x2c, 0x2a, 0xb8,
	0x39, 0xec, 0xc1, 0xe7, 0x15, 0xdf, 0xa9, 0xb6, 0xcc, 0x33, 0xe2, 0xed, 0x52, 0x4e, 0xbc, 0xf1,
	0x9d, 0xbb, 0x41, 0xa5, 0x54, 0x9c, 0x36, 0xfe, 0x80, 0xe2, 0x48, 0x45, 0x2a, 0xbb, 0x02, 0xba,
	0xd5, 0xa8, 0x9b, 0xb4, 0x59, 0xa6, 0x0d, 0x26, 0x99, 0xe7, 0x36, 0xbe, 0x2a, 0x0e, 0x46, 0xaf,
	0x18, 0x44, 0xf5, 0xb4, 0x84, 0x8e, 0xc6, 0x50, 0x98, 0xfe, 0x0b, 0x2c, 0x1f, 0xf0, 0x63, 0xe2,
	0x05, 0xbe, 0xa1, 0x79, 0xcf, 0xf5, 0x79, 0x4e, 0x5b, 0x4b, 0xdc, 0x0c, 0xf1, 0x3a, 0x04, 0x7d,
	0x11, 0x92, 0x15, 0xb3, 0x53, 0xb6, 0xe5, 0x0c, 0x24, 0x8d, 0xe0, 0xa2, 0x4a, 0x98, 0xe0, 0x23,
	0x58, 0xbd, 0x9a, 0xef, 0x4f, 0x2e, 0x75, 0xfd, 0xe3, 0x7d, 0xde, 0x18, 0x69, 0x20, 0xba, 0x4d,
	0x03, 0x1b, 0x98, 0xcb, 0x59, 0x1f, 0xc1, 0x16, 0xa3, 0xa1, 0x7f, 0x07, 0xe9, 0xdb, 0x17, 0xb2,
	0x1f, 0xa2, 0x62, 0x75, 0xf0, 0x26, 0x2c, 0x0e, 0x58, 0x4f, 0x5d, 0xde, 0x9b, 0x1a, 0x55, 0x10,
	0x8d, 0x0d, 0x2a, 0x59, 0x4d, 0x55, 0x10, 0xc3, 0xd5, 0xe8, 0xac, 0xf4, 0x82, 0x64, 0x7a, 0xe2,
	0x0f, 0x44, 0x5a, 0xcb, 0xb6, 0x4c, 0x6f, 0xda, 0xe8, 0xdf, 0x55, 0x88, 0x1d, 0xbc, 0x15, 0x41,
	0xdc, 0x36, 0x7d, 0xd7, 0x92, 0x89, 0xab, 0xc5, 0x9f, 0xc6, 0x47, 0x8d, 0x51, 0x7f, 0x86, 0x7f,
	0x8f, 0xa4, 0x2c, 0x2a, 0x5b, 0x61, 0x5d, 0xb9, 0x5d, 0x5b, 0x90, 0x16, 0xc7, 0x48, 0x6f, 0x72,
	0xd1, 0xde, 0x84, 0xae, 0x41, 0x4b, 0xc2, 0x13, 0xfe, 0x22, 0x8e, 0x6a, 0x46, 0x52, 0x9d, 0xa3,
	0x58, 0x2e, 0xb1, 0x54, 0x13, 0xe7, 0x7a, 0x88, 0xf0, 0xdf, 0xd1, 0x15, 0x0e, 0x11, 0xc6, 0xb5,
	0x65, 0x48, 0x89, 0x36, 0x09, 0x25, 0x8f, 0x10, 0xfe, 0x1f, 0xc1, 0xca, 0x90, 0x92, 0xc3, 0x8e,
	0x6d, 0x72, 0x52, 0x65, 0xbe, 0xa8, 0xf3, 0x3a, 0x24, 0x6b, 0xdc, 0xe4, 0xc1, 0x56, 0x2d, 0x6c,
	0xac, 0x44, 0xe9, 0x04, 0x41, 0x9b, 0x50, 0x2e, 0x1d, 0x8c, 0xc0, 0x6f, 0xf2, 0x12, 0x1f, 0xab,
	0x24, 0x8a, 0xf6, 0x7c, 0x7a, 0x89, 0x4f, 0x10, 0x7e, 0x80, 0x20, 0x1f, 0x2f, 0x71, 0x6c, 0x53,
	0xfb, 0xfa, 0xb5, 0x3b, 0xe8, 0x4f, 0x4c, 0x42, 0xff, 0x53, 0x84, 0x29, 0xe4, 0x86, 0xe4, 0xd7,
	0x38, 0xeb, 0xdc, 0xdb, 0xae, 0x3d, 0xbb, 0x9e, 0xef, 0x5e, 0xf6, 0xed, 0x39, 0xc2, 0x87, 0x23,
	0x13, 0x14, 0xf2, 0x8d, 0xfd, 0x27, 0x54, 0xc0, 0x5e, 0x20, 0xbc, 0x1f, 0x79, 0x3c, 0x76, 0x8e,
	0x4d, 0xea, 0x10, 0x01, 0x2e, 0x8a, 0xb6, 0x04, 0x29, 0xf9, 0x12, 0x04, 0x88, 0x49, 0xa3, 0x77,
	0x53, 0xe1, 0xbd, 0x40, 0xb8, 0x1b, 0x8b, 0x27, 0x8a, 0xf2, 0x3d, 0x7c, 0x16, 0x18, 0xec, 0x91,
	0x37, 0x69, 0x71, 0xb4, 0x36, 0xb2, 0x2e, 0xa3, 0xce, 0x2a, 0xde, 0x97, 0x08, 0xff, 0x05, 0xcb,
	0x31, 0xbc, 0xb2, 0x38, 0x3f, 0x5e, 0x47, 0x9c, 0xbf, 0xfa, 0x18, 0xde, 0x89, 0xfe, 0x15, 0xc2,
	0xdf, 0x46, 0xe8, 0x0d, 0xe2, 0x73, 0xe6, 0x85, 0x75, 0x54, 0x05, 0xbe, 0x46, 0xf8, 0x20, 0x3e,
	0x50, 0x14, 0xec, 0x0e, 0x0d, 0x78, 0x83, 0x70, 0x2b, 0x32, 0x97, 0x11, 0xc0, 0xb1, 0x4b, 0x3c,
	0x60, 0xd3, 0x6e, 0xca, 0xf6, 0x16, 0x7d, 0xf3, 0x03, 0x64, 0x86, 0x36, 0x5c, 0xf8, 0x94, 0xed,
	0x96, 0xf0, 0xc9, 0xc0, 0x6c, 0x8d, 0x9b, 0x1e, 0x17, 0xdf, 0xb3, 0x48, 0x07, 0x48, 0x55, 0x58,
	0xd7, 0xa5, 0x4e, 0x56, 0x13, 0xe7, 0x3a, 0x13, 0x03, 0x9c, 0x4d, 0x6c, 0x7f, 0x79, 0x7e, 0x59,
	0x40, 0x17, 0x97, 0x05, 0xf4, 0xee, 0xb2, 0x80, 0xfe, 0x7b, 0x5f, 0x98, 0x3a, 0xca, 0x14, 0x8b,
	0xeb, 0x83, 0xc6, 0xfc, 0x96, 0x92, 0x3f, 0x9b, 0x1f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x19, 0x0e,
	0x55, 0x43, 0x8a, 0x0c, 0x00, 0x00,
}

func (m *MsgAccountLoginGameReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAccountLoginGameReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAccountLoginGameReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintGame(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintGame(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintGame(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAccountLoginGameAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAccountLoginGameAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAccountLoginGameAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SessionToken) > 0 {
		i -= len(m.SessionToken)
		copy(dAtA[i:], m.SessionToken)
		i = encodeVarintGame(dAtA, i, uint64(len(m.SessionToken)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintGame(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTimeSyncReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTimeSyncReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTimeSyncReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClientTime) > 0 {
		i -= len(m.ClientTime)
		copy(dAtA[i:], m.ClientTime)
		i = encodeVarintGame(dAtA, i, uint64(len(m.ClientTime)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTimeSyncAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTimeSyncAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTimeSyncAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerTime) > 0 {
		i -= len(m.ServerTime)
		copy(dAtA[i:], m.ServerTime)
		i = encodeVarintGame(dAtA, i, uint64(len(m.ServerTime)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerEnterGameReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerEnterGameReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerEnterGameReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SessionToken) > 0 {
		i -= len(m.SessionToken)
		copy(dAtA[i:], m.SessionToken)
		i = encodeVarintGame(dAtA, i, uint64(len(m.SessionToken)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintGame(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerEnterGameAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerEnterGameAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerEnterGameAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MapId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.MapId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.OtherPlayerTankInfoList) > 0 {
		for iNdEx := len(m.OtherPlayerTankInfoList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OtherPlayerTankInfoList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGame(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.SelfTankInfo != nil {
		{
			size, err := m.SelfTankInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerEnterGameFinishNtf) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerEnterGameFinishNtf) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerEnterGameFinishNtf) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerTime) > 0 {
		i -= len(m.ServerTime)
		copy(dAtA[i:], m.ServerTime)
		i = encodeVarintGame(dAtA, i, uint64(len(m.ServerTime)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerEnterGameSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerEnterGameSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerEnterGameSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TankInfo != nil {
		{
			size, err := m.TankInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerExitGameReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerExitGameReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerExitGameReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerExitGameAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerExitGameAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerExitGameAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerExitGameSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerExitGameSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerExitGameSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerBasicInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerBasicInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerBasicInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerBasicInfoAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerBasicInfoAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerBasicInfoAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankMoveReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankMoveReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankMoveReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankMoveAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankMoveAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankMoveAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankMoveSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankMoveSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankMoveSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.PlayerId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankUpdatePosReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankUpdatePosReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankUpdatePosReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.State != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankUpdatePosAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankUpdatePosAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankUpdatePosAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.State != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankUpdatePosSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankUpdatePosSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankUpdatePosSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.State != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankStopMoveReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankStopMoveReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankStopMoveReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankStopMoveAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankStopMoveAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankStopMoveAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MoveInfo != nil {
		{
			size, err := m.MoveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerTankStopMoveSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerTankStopMoveSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerTankStopMoveSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerChangeTankReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerChangeTankReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerChangeTankReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TankId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.TankId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerChangeTankAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerChangeTankAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerChangeTankAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangedTankInfo != nil {
		{
			size, err := m.ChangedTankInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerChangeTankSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerChangeTankSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerChangeTankSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChangedTankInfo != nil {
		{
			size, err := m.ChangedTankInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGame(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerRestoreTankReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerRestoreTankReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerRestoreTankReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerRestoreTankAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerRestoreTankAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerRestoreTankAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TankId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.TankId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPlayerRestoreTankSync) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPlayerRestoreTankSync) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPlayerRestoreTankSync) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TankId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.TankId))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerId != 0 {
		i = encodeVarintGame(dAtA, i, uint64(m.PlayerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGame(dAtA []byte, offset int, v uint64) int {
	offset -= sovGame(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAccountLoginGameReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgAccountLoginGameAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	l = len(m.SessionToken)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	if m.Result != 0 {
		n += 1 + sovGame(uint64(m.Result))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgTimeSyncReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientTime)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgTimeSyncAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ServerTime)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerEnterGameReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	l = len(m.SessionToken)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerEnterGameAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SelfTankInfo != nil {
		l = m.SelfTankInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if len(m.OtherPlayerTankInfoList) > 0 {
		for _, e := range m.OtherPlayerTankInfoList {
			l = e.Size()
			n += 1 + l + sovGame(uint64(l))
		}
	}
	if m.MapId != 0 {
		n += 1 + sovGame(uint64(m.MapId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerEnterGameFinishNtf) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ServerTime)
	if l > 0 {
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerEnterGameSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TankInfo != nil {
		l = m.TankInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerExitGameReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerExitGameAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerExitGameSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != 0 {
		n += 1 + sovGame(uint64(m.PlayerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerBasicInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerBasicInfoAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankMoveReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankMoveAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankMoveSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != 0 {
		n += 1 + sovGame(uint64(m.PlayerId))
	}
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankUpdatePosReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != 0 {
		n += 1 + sovGame(uint64(m.State))
	}
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankUpdatePosAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != 0 {
		n += 1 + sovGame(uint64(m.State))
	}
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankUpdatePosSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != 0 {
		n += 1 + sovGame(uint64(m.PlayerId))
	}
	if m.State != 0 {
		n += 1 + sovGame(uint64(m.State))
	}
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankStopMoveReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankStopMoveAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MoveInfo != nil {
		l = m.MoveInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerTankStopMoveSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != 0 {
		n += 1 + sovGame(uint64(m.PlayerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerChangeTankReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TankId != 0 {
		n += 1 + sovGame(uint64(m.TankId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerChangeTankAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChangedTankInfo != nil {
		l = m.ChangedTankInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerChangeTankSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChangedTankInfo != nil {
		l = m.ChangedTankInfo.Size()
		n += 1 + l + sovGame(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerRestoreTankReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerRestoreTankAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TankId != 0 {
		n += 1 + sovGame(uint64(m.TankId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MsgPlayerRestoreTankSync) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerId != 0 {
		n += 1 + sovGame(uint64(m.PlayerId))
	}
	if m.TankId != 0 {
		n += 1 + sovGame(uint64(m.TankId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGame(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGame(x uint64) (n int) {
	return sovGame(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAccountLoginGameReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAccountLoginGameReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAccountLoginGameReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAccountLoginGameAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAccountLoginGameAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAccountLoginGameAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTimeSyncReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTimeSyncReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTimeSyncReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientTime", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientTime = append(m.ClientTime[:0], dAtA[iNdEx:postIndex]...)
			if m.ClientTime == nil {
				m.ClientTime = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTimeSyncAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTimeSyncAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTimeSyncAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTime", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerTime = append(m.ServerTime[:0], dAtA[iNdEx:postIndex]...)
			if m.ServerTime == nil {
				m.ServerTime = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerEnterGameReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerEnterGameReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerEnterGameReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerEnterGameAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerEnterGameAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerEnterGameAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfTankInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SelfTankInfo == nil {
				m.SelfTankInfo = &PlayerAccountTankInfo{}
			}
			if err := m.SelfTankInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherPlayerTankInfoList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtherPlayerTankInfoList = append(m.OtherPlayerTankInfoList, &PlayerAccountTankInfo{})
			if err := m.OtherPlayerTankInfoList[len(m.OtherPlayerTankInfoList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MapId", wireType)
			}
			m.MapId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MapId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerEnterGameFinishNtf) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerEnterGameFinishNtf: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerEnterGameFinishNtf: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTime", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerTime = append(m.ServerTime[:0], dAtA[iNdEx:postIndex]...)
			if m.ServerTime == nil {
				m.ServerTime = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerEnterGameSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerEnterGameSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerEnterGameSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TankInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TankInfo == nil {
				m.TankInfo = &PlayerAccountTankInfo{}
			}
			if err := m.TankInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerExitGameReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerExitGameReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerExitGameReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerExitGameAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerExitGameAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerExitGameAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerExitGameSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerExitGameSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerExitGameSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerBasicInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerBasicInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerBasicInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerBasicInfoAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerBasicInfoAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerBasicInfoAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankMoveReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankMoveReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankMoveReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankMoveAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankMoveAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankMoveAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankMoveSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankMoveSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankMoveSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankUpdatePosReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankUpdatePosReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankUpdatePosReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= MovementState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankUpdatePosAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankUpdatePosAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankUpdatePosAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= MovementState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankUpdatePosSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankUpdatePosSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankUpdatePosSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= MovementState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankStopMoveReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankStopMoveReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankStopMoveReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankStopMoveAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankStopMoveAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankStopMoveAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoveInfo == nil {
				m.MoveInfo = &TankMoveInfo{}
			}
			if err := m.MoveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerTankStopMoveSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerTankStopMoveSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerTankStopMoveSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerChangeTankReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerChangeTankReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerChangeTankReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TankId", wireType)
			}
			m.TankId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TankId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerChangeTankAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerChangeTankAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerChangeTankAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangedTankInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangedTankInfo == nil {
				m.ChangedTankInfo = &TankInfo{}
			}
			if err := m.ChangedTankInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerChangeTankSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerChangeTankSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerChangeTankSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangedTankInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGame
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGame
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangedTankInfo == nil {
				m.ChangedTankInfo = &PlayerTankInfo{}
			}
			if err := m.ChangedTankInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerRestoreTankReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerRestoreTankReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerRestoreTankReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerRestoreTankAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerRestoreTankAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerRestoreTankAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TankId", wireType)
			}
			m.TankId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TankId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPlayerRestoreTankSync) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGame
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPlayerRestoreTankSync: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPlayerRestoreTankSync: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerId", wireType)
			}
			m.PlayerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayerId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TankId", wireType)
			}
			m.TankId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGame
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TankId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGame(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGame
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGame(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGame
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGame
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGame
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGame
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGame
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGame
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGame        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGame          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGame = fmt.Errorf("proto: unexpected end of group")
)
